# --- Argo CD Project Configuration ---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: mt-be24c298  # Project Name
  namespace: argocd  # Namespace where Argo CD is installed
spec:
  description: Project to manage northwind workflows
  sourceRepos:
    - '*'  # Allow all repositories, or specify your Git repo
  destinations:
    - namespace: '*'  # Allow all namespaces, or specify a namespace
      server: https://kubernetes.default.svc  # Kubernetes API server URL
  clusterResourceWhitelist:
    - group: argoproj.io
      kind: Workflow  # Allow Workflow resources
  namespaceResourceWhitelist:
    - group: ""  # Allow all core resources (e.g., Pods, ConfigMaps)
      kind: "*"
  roles: []  # Add roles if necessary for fine-grained control

---

# --- Role for Managing Workflows ---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: workflow-admin  # Role Name
rules:
  - apiGroups: ["argoproj.io"]
    resources: ["workflows"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---

# --- Bind Role to Service Account ---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: workflow-admin-binding  # Role Binding Name
subjects:
  - kind: ServiceAccount
    name: default  # Replace with your Service Account name
    namespace: mt-be24c298  # Namespace where your app runs
roleRef:
  kind: ClusterRole
  name: workflow-admin
  apiGroup: rbac.authorization.k8s.io

---

# --- Workflow Template (Optional: Add Your Workflow Resource) ---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: fetch-northwind-supplier
  namespace: mt-be24c298  # Replace with your namespace
spec:
  entrypoint: fetch-supplier-data
  templates:
    - name: fetch-supplier-data
      container:
        image: curlimages/curl:latest
        command: [sh, -c]
        args:
          - "curl -o /tmp/suppliers.json https://services.odata.org/V2/Northwind/Northwind.svc/Suppliers?$format=json"
        volumeMounts:
          - name: output
            mountPath: /tmp
      outputs:
        artifacts:
          - name: supplier-data
            path: /tmp/suppliers.json
  volumes:
    - name: output
      emptyDir: {}
